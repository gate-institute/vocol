<% include header %>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.min.js"></script>
<div class="ui grid">
  <div class="ui container" class="containerWihPadding">
    <!-- <iframe src="./analyticsLink/" frameborder="0" scrolling="no" style="height:1000px; width:100% ; right: 0px; left: 0px"></iframe> -->

    <div style="margin-top: 3% !important;"></div>
    <h1>Analytical Graphs</h1>
    <div style="margin-top: 30px">

      <div class="ui form">

        <div class="inline fields">
          <div class="three wide field">
            <select id="graph-names" class="ui large dropdown search icon button"
                  style="font-weight: bold; font-size: 13px;"
                  onchange="javascript:changeGraph()">
                    <i class="bar chart icon"></i>
                    <option class="text">Select Graph Type
                      <option value="PieChart">PieChart
                      <option value="BarChart">BarChart
                      <option value="ForceGraph">ForceGraph
                      <option value="DendroGram">DendroGram
                  </select>
          </div>

          <div class="one field"></div>

          <div class="ui large button" data-toggle="modal" class="modal_message" data-target="#sparqlModal" onclick="toggle()"> Query
          </div>

          <div id="sparqlModal" class="fullscreen modal" role="dialog">
            <div class="modal-dialog" style="width:800px;">
              <div class="modal-content">
                <div class="modal-header">
                  <button type="button" class="close home_close" data-dismiss="modal">&times;</button>
                  <h3 class="modal-title">Query</h3>
                </div>
                <div class="modal-body">

                  <p>
                    <form class="msg_form" onsubmit="return false;" role="form">
                      <div class="modal-footer">
                        <textarea class="msg_home" id="sparql" ></textarea>
                        <br><br>

                        <div class="ui red cancel inverted button" id="cancleQuery" data-dismiss="modal" style="align:right">
                          <i class="remove icon"></i>
                          Cancle
                        </div>
                        <button type="button" class="sendmsg ui green ok inverted button" id="executeQuery" data-dismiss="modal">
                            <i class="checkmark icon"></i>
                            Run
                          </button>
                      </div>
                    </form>
                  </p>

                </div>
              </div>
            </div>

          </div>

          <div id="search-entity" style="margin-top: 10px; height: 100%; width: 20%" class="form-group item-hidden">
            <select id="select-entity" class="ui search dropdown popup-show">
                      <option value="">Choose entity</option>
                    </select>
            <div class="ui special popup">
              <div class="header">To focus on your favourite entity, click here to choose it or fill in its name. </div>
            </div>
          </div>

          <div class="one field"></div>

          <div id="rdf-skos" style="display:none">
            <div class="ui form">
              <div class="grouped fields">
                <div class="ui buttons">
                  <div class="field">
                    <div class="ui radio checkbox">
                      <button  class="ui positive button" id="rdf" onclick="check('rdf')">
                              <input type="radio" id="rdf-radio" name="rdf-skos" checked="checked">
                              <label>RDF(S)</label>
                            </button>
                    </div>
                  </div>
                  <div class="or" data-text="or"></div>
                  <div class="field">
                    <div class="ui radio checkbox">
                      <button class="ui button" id="skos" onclick="check('skos')">
                              <input type="radio" id="skos-radio" name="rdf-skos" >
                              <label>SKOS</label>
                            </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <input id="endpoint" value="http://dbpedia.org/sparql" type="hidden" class="form-control">

      <div id="result" style="overflow-x:hidden;position: relative; width:800px; height:600px; display:none;border:none"></div>
      <div id="myChartBarDiv" style=" position: fixed; width:800px; height:600px;display:none"><canvas id="myChartBar" ></canvas></div>

      <div id="dendro-zoom" style="margin-left: 50px; display:none" class="form-group">
        <div class="vis-network">
          <div class="vis-navigation">
            <div id="zoom_out" class="zoom vis-button vis-zoomOut  popup-show"></div>
            <div class="ui special popup">
              <div class="header">Click to zoom in </div>
            </div>
              <div id="zoom_in" class="zoom vis-button vis-zoomIn  popup-show"></div>
            <div class="ui special popup">
              <div class="header">Click to zoom out </div>
            </div>
          </div>
        </div>

      </div>
      <div id="myChartPieDiv" style=" position: fixed; width:800px; height:600px;display:none"><canvas id="myChartPie" width="800" height="600"></canvas></div>

    </div>
  </div>
</div>
<!-- This element's contents will be replaced with your component. -->
</div>


<script>

  function check(val) {
    if (val == 'rdf') {
      if (!$('#rdf-radio').checked) {
        $('#rdf-radio').prop("checked", true);
        $('#skos-radio').prop("checked", false);
        document.getElementById('skos').classList.remove('positive');
        document.getElementById('rdf').classList.add('positive');
        $('#sparql').val(data[3]['query']);
        exec();
      }
    }
    if (val == 'skos') {
      if (!$('#skos-radio').checked) {
        $('#skos-radio').prop("checked", true);
        $('#rdf-radio').prop("checked", false);
        document.getElementById('rdf').classList.remove('positive');
        document.getElementById('skos').classList.add('positive');
        $('#sparql').val(data[5]['query']);
        exec();
      }
    }
  }
  var selectedgraphtype = "";

  // action: 'combo',
  function changeGraph() {
    $("#result").empty();
    selectedgraphtype = document.getElementById('graph-names').value;
    if (selectedgraphtype == 'BarChart') {
      $('#sparql').val(data[0]['query']);
      exec();
    } else if (selectedgraphtype == 'PieChart') {
      $('#sparql').val(data[0]['query']);
      exec();
    } else if (selectedgraphtype == 'ForceGraph') {
      $("#select-entity").empty();
      $('#sparql').val(data[1]['query']);
      var height = $(document).height()
      var width = $(document).width() * (2 / 3);
      $("#result").height(height).width(width);
      exec();
    } else if (selectedgraphtype == 'Sankey') {
      $('#sparql').val(data[2]['query']);
      exec();
    } else if (selectedgraphtype == 'RoundTree') {
      $('#sparql').val(data[3]['query']);
      exec();
    } else if (selectedgraphtype == 'DendroGram') {
      $("#select-entity").empty();
      document.getElementById('rdf-skos').style.display = 'inline';
      if (document.getElementById("rdf-radio").checked === true) {
        $('#sparql').val(data[3]['query']);
      } else {
        $('#sparql').val(data[5]['query']);
      }
      exec(); //TODO: It should be checked that why some nodes are hidden when selected.
    } else if (selectedgraphtype == 'TreeMap') {
      $('#sparql').val(data[3]['query']);
      exec();
    } else if (selectedgraphtype == 'SunBurst') {
      $('#sparql').val(data[3]['query']);
      exec();
    } else if (selectedgraphtype == 'CirclePack') {
      $('#sparql').val(data[3]['query']);
      exec();
    }
  };

  $(function() {
    loadQueries();
  });

  function exec() {
    if (selectedgraphtype != ('DendroGram')) {
      document.getElementById('rdf-skos').style.display = 'none';
      document.getElementById('dendro-zoom').style.display = 'none';
    }

    if (selectedgraphtype != ('ForceGraph' || 'DendroGram'))
      $('#search-entity').css('display', 'none');
    if (selectedgraphtype != 'ForceGraph') {
      document.getElementById('result').classList.add('showGraph');
    }
    if (selectedgraphtype == 'ForceGraph') {
      document.getElementById('result').classList.remove('showGraph');
    }

    //User guide for popup show
    var resizePopup = function() {
      $('.ui.popup').css('max-height', $(window).height());
    };

    $(window).resize(function(e) {
      resizePopup();
    });

    $('.popup-show')
      .popup({
        lastResort: 'bottom left',
        onShow: function() {
          resizePopup();
        },
      });

    var endpoint = d3.select("#endpoint").property("value")
    var sparql = d3.select("#sparql").property("value")

    if (selectedgraphtype == 'BarChart') {
        d3sparql.query(endpoint, sparql, barchart)
    } else if (selectedgraphtype == 'PieChart') {
      d3sparql.query(endpoint, sparql, piechart)
    } else if (selectedgraphtype == 'ForceGraph') {
      $('#search-entity').css('display', 'inline');
      d3sparql.query(endpoint, sparql, forcegraph)
    } else if (selectedgraphtype == 'Sankey') {
      d3sparql.query(endpoint, sparql, sankey)
    } else if (selectedgraphtype == 'RoundTree') {
      d3sparql.query(endpoint, sparql, roundtree)
    } else if (selectedgraphtype == 'DendroGram') {
      $('#search-entity').css('display', 'inline');
      d3sparql.query(endpoint, sparql, dendrogram);
      document.getElementById('dendro-zoom').style.display = 'inline';
    } else if (selectedgraphtype == 'TreeMap') {
      d3sparql.query(endpoint, sparql, treemap)
    } else if (selectedgraphtype == 'TreeMapZoom') {
      d3sparql.query(endpoint, sparql, treemapzoom)
    } else if (selectedgraphtype == 'SunBurst') {
      d3sparql.query(endpoint, sparql, sunburst)
    } else if (selectedgraphtype == 'CirclePack') {
      d3sparql.query(endpoint, sparql, circlepack)
    }
  }

  function barchart(json) {
    var config = {
      "label_x": "Type",
      "label_y": "Number",
      "var_x": "conceptType",
      "var_y": "value",
      "width": 800, // canvas width
      "height": 450, // canvas height
      "margin": 150, // canvas margin
      "selector": "#result"
    }
    d3sparql.barchart(json, config)
  }

  function piechart(json) {
    var config = {
      "label": "conceptType",
      "size": "value",
      "width": 800, // canvas width
      "height": 550, // canvas height
      "margin": 10, // canvas margin
      "hole": 200, // doughnut hole: 0 for pie, r > 0 for doughnut
      "selector": "#result"
    }
    d3sparql.piechart(json, config);
  }

  function forcegraph(json) {
    var config = {
      "charge": -400,
      "distance": 50,
      "width": 800,
      "height": 600,
      "selector": "#result"
    }
    d3sparql.forcegraph(json, config);
  }

  function sankey(json) {
    var config = {
      "key1": "parent",
      "key2": "child",
      "label1": "parent_name",
      "label2": "child_name",
      "width": 800,
      "height": 750,
      "margin": 10,
      "selector": "#result"
    }
    d3sparql.sankey(json, config)
  }

  function roundtree(json) {
    var config = {
      "root": "root_name",
      "parent": "parent_name",
      "child": "child_name",
      "diameter": 800,
      "angle": 360,
      "depth": 200,
      "radius": 20,
      "selector": "#result"
    }
    d3sparql.roundtree(json, config)
  }

  function dendrogram(json) {
    var config = {
      "root": "root_name",
      "parent": "parent_name",
      "child": "child_name",
      "margin": 300,
      "radius": 10,
      "selector": "#result"
    }
    d3sparql.dendrogram(json, config)
  }

  function htmltable(json) {
    var config = {
      "root": "root_name",
      "parent": "parent_name",
      "child": "child_name",
      "width": 800,
      "height": 750,
      "margin": 300,
      "radius": 10,
      "selector": "#result"
    }
    d3sparql.htmltable(json, config)
  }

  function treemap(json) {
    var config = {
      "root": "root_name",
      "parent": "parent_name",
      "child": "child_name",
      "width": 800,
      "height": 520,
      "selector": "#result"
    }
    d3sparql.treemap(json, config)
  }

  function treemapzoom(json) {
    var config = {
      "width": 800,
      "height": 500,
      "selector": "#result"
    }
    d3sparql.treemapzoom(json, config)
  }

  function sunburst(json) {
    var config = {
      "root": "root_name",
      "parent": "parent_name",
      "child": "child_name",
      "width": 800,
      "height": 720,
      "margin": 50,
      "selector": "#result"
    }
    d3sparql.sunburst(json, config)
  }

  function circlepack(json) {
    var config = {
      "root": "root_name",
      "parent": "parent_name",
      "child": "child_name",
      "width": 800,
      "height": 850,
      "diameter": 700,
      "selector": "#result"
    }
    d3sparql.circlepack(json, config)
  }

  function coordmap(json) {
    var config = {
      "var_lat": "lat",
      "var_lng": "lng",
      "width": 800,
      "height": 400,
      "radius": 5,
      "color": "#55C25E",
      "topojson": "lib/d3/map/world-50m.json",
      "selector": "#result"
    }
    d3sparql.coordmap(json, config)
  }

  function namedmap(json) {
    var config = {
      "label": "label",
      "value": "size",
      "color_max": "red",
      "topojson": "lib/d3/map/japan.topojson",
      "mapname": "japan",
      "keyname": "name_local",
      "center_lat": 34,
      "center_lng": 137,
      "scale": 10000,
      "selector": "#result"
    }
    d3sparql.namedmap(json, config)
  }

  /* Helper function only for the d3sparql web site */
  function toggle() {
    var elem = d3.select("#sparql")
    $(document).ready(function() {
      jQuery("button#executeQuery").click(function() {
        var msg = $(this).parent().children().closest('textarea').val();
        $('#sparql').val(msg);
        exec();
      });
    });
  }

  function exec_offline() {
    d3.json("cache/dbpedia/area-ja.json", render)
  }

  function loadQueries() {
    var pathName = window.location.pathname;
    var dynamicPath = "";
    if (pathName.split('/').length === 4)
      dynamicPath = '/' + pathName.split('/')[1];
    for (var i = 0; i < data.length; i++) {
      if (i == 0) {
        $('#sparql').val(data[i]['query']);
        $('#endpoint').val(data[i]['endpoint'].replace('domain', window.location.origin + dynamicPath));
      }
    }
  }
</script>
<style>
  .ui.popup {
    overflow: auto;
  }

  .ui.dropdown .menu>.item {
    font-size: 1.2rem;
  }

  .bar:hover {
    fill: brown;
  }

  text {
    font-size: 11px;
    pointer-events: none;
  }

  text.parent {
    fill: #1f77b4;
  }

  circle {
    fill: #ccc;
    stroke: #999;
    pointer-events: all;
  }

  circle.parent {
    fill: #1f77b4;
    fill-opacity: .1;
    stroke: steelblue;
  }

  circle.parent:hover {
    stroke: #ff7f0e;
    stroke-width: .5px;
  }

  circle.child {
    pointer-events: none;
  }

  #result {
    overflow-x: auto;
    overflow-y: auto;
    text-align: center;
    margin-left: 50px;
    margin-top: 50px;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  }

  .showGraph {
    border-style: ridge;
  }

  .item-show {
    display: inline;
  }

  .item-hidden {
    display: none;
  }

  < !--Pie Chart style -->.label-text {
    alignment-baseline: middle;
    font-size: 12px;
    font-family: arial, helvetica, "sans-serif";
    fill: #393939;
  }

  .label-line {
    stroke-width: 1;
    stroke: #393939;
  }

  .label-circle {
    fill: #393939;
  }

  .toolTip {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    position: absolute;
    display: none;
    width: auto;
    height: auto;
    background: none repeat scroll 0 0 white;
    border: 0 none;
    border-radius: 8px 8px 8px 8px;
    box-shadow: -3px 3px 15px #888888;
    color: black;
    font: 12px sans-serif;
    padding: 5px;
    text-align: center;
  }

  path {
    stroke: steelblue;
    stroke-width: 2;
    fill: none;
  }
  .node {
  cursor: pointer;
}

.node circle {
  fill: #fff;
  stroke: steelblue;
  stroke-width: 3px;
}

.node text {
  font: 12px sans-serif;
}

.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 2px;
}


</style>




<% include footer %>
